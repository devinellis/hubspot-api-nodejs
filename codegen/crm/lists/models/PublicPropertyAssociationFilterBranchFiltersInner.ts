/**
 * Lists
 * CRUD operations to manage lists and list memberships
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PublicEventAnalyticsFilterCoalescingRefineBy } from '../models/PublicEventAnalyticsFilterCoalescingRefineBy';
import { PublicEventFilterMetadata } from '../models/PublicEventFilterMetadata';
import { PublicInListFilterMetadata } from '../models/PublicInListFilterMetadata';
import { PublicPropertyFilterOperation } from '../models/PublicPropertyFilterOperation';

export class PublicPropertyAssociationFilterBranchFiltersInner {
    'filterType': PublicPropertyAssociationFilterBranchFiltersInnerFilterTypeEnum;
    'property': string;
    'operation': PublicPropertyFilterOperation;
    'coalescingRefineBy': PublicEventAnalyticsFilterCoalescingRefineBy;
    'operator': string;
    'listId': number;
    'toObjectTypeId'?: string;
    'associationTypeId': number;
    'associationCategory': string;
    'toObjectType'?: string;
    'pruningRefineBy': PublicEventAnalyticsFilterCoalescingRefineBy;
    'enableTracking'?: boolean;
    'pageUrl': string;
    'ctaName': string;
    'eventId': string;
    'formId'?: string;
    'pageId': string;
    'eventTypeId': string;
    'filterLines': Array<PublicEventFilterMetadata>;
    'subscriptionIds': Array<number>;
    'acceptedStatuses': Array<string>;
    'subscriptionType': string;
    'channel': string;
    'acceptedOptStates': Array<string>;
    'businessUnitId'?: number;
    'campaignId': string;
    'surveyId': string;
    'surveyQuestion': string;
    'surveyAnswerRowId'?: string;
    'surveyAnswerColId'?: string;
    'valueComparison': PublicPropertyFilterOperation;
    'webinarId'?: string;
    'level': string;
    'emailId': number;
    'appId': number;
    'clickUrl'?: string;
    'privacyName': string;
    'entityType': string;
    'searchTermType': string;
    'searchTerms': Array<string>;
    'adNetwork': string;
    'metadata'?: PublicInListFilterMetadata;
    'propertyWithObjectId': string;
    'shouldAccept': boolean;
    'source'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "filterType",
            "baseName": "filterType",
            "type": "PublicPropertyAssociationFilterBranchFiltersInnerFilterTypeEnum",
            "format": ""
        },
        {
            "name": "property",
            "baseName": "property",
            "type": "string",
            "format": ""
        },
        {
            "name": "operation",
            "baseName": "operation",
            "type": "PublicPropertyFilterOperation",
            "format": ""
        },
        {
            "name": "coalescingRefineBy",
            "baseName": "coalescingRefineBy",
            "type": "PublicEventAnalyticsFilterCoalescingRefineBy",
            "format": ""
        },
        {
            "name": "operator",
            "baseName": "operator",
            "type": "string",
            "format": ""
        },
        {
            "name": "listId",
            "baseName": "listId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "toObjectTypeId",
            "baseName": "toObjectTypeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "associationTypeId",
            "baseName": "associationTypeId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "associationCategory",
            "baseName": "associationCategory",
            "type": "string",
            "format": ""
        },
        {
            "name": "toObjectType",
            "baseName": "toObjectType",
            "type": "string",
            "format": ""
        },
        {
            "name": "pruningRefineBy",
            "baseName": "pruningRefineBy",
            "type": "PublicEventAnalyticsFilterCoalescingRefineBy",
            "format": ""
        },
        {
            "name": "enableTracking",
            "baseName": "enableTracking",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "pageUrl",
            "baseName": "pageUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "ctaName",
            "baseName": "ctaName",
            "type": "string",
            "format": ""
        },
        {
            "name": "eventId",
            "baseName": "eventId",
            "type": "string",
            "format": ""
        },
        {
            "name": "formId",
            "baseName": "formId",
            "type": "string",
            "format": ""
        },
        {
            "name": "pageId",
            "baseName": "pageId",
            "type": "string",
            "format": ""
        },
        {
            "name": "eventTypeId",
            "baseName": "eventTypeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "filterLines",
            "baseName": "filterLines",
            "type": "Array<PublicEventFilterMetadata>",
            "format": ""
        },
        {
            "name": "subscriptionIds",
            "baseName": "subscriptionIds",
            "type": "Array<number>",
            "format": "int64"
        },
        {
            "name": "acceptedStatuses",
            "baseName": "acceptedStatuses",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "subscriptionType",
            "baseName": "subscriptionType",
            "type": "string",
            "format": ""
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "string",
            "format": ""
        },
        {
            "name": "acceptedOptStates",
            "baseName": "acceptedOptStates",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "businessUnitId",
            "baseName": "businessUnitId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "campaignId",
            "baseName": "campaignId",
            "type": "string",
            "format": ""
        },
        {
            "name": "surveyId",
            "baseName": "surveyId",
            "type": "string",
            "format": ""
        },
        {
            "name": "surveyQuestion",
            "baseName": "surveyQuestion",
            "type": "string",
            "format": ""
        },
        {
            "name": "surveyAnswerRowId",
            "baseName": "surveyAnswerRowId",
            "type": "string",
            "format": ""
        },
        {
            "name": "surveyAnswerColId",
            "baseName": "surveyAnswerColId",
            "type": "string",
            "format": ""
        },
        {
            "name": "valueComparison",
            "baseName": "valueComparison",
            "type": "PublicPropertyFilterOperation",
            "format": ""
        },
        {
            "name": "webinarId",
            "baseName": "webinarId",
            "type": "string",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "string",
            "format": ""
        },
        {
            "name": "emailId",
            "baseName": "emailId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "appId",
            "baseName": "appId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "clickUrl",
            "baseName": "clickUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "privacyName",
            "baseName": "privacyName",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entityType",
            "type": "string",
            "format": ""
        },
        {
            "name": "searchTermType",
            "baseName": "searchTermType",
            "type": "string",
            "format": ""
        },
        {
            "name": "searchTerms",
            "baseName": "searchTerms",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "adNetwork",
            "baseName": "adNetwork",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "PublicInListFilterMetadata",
            "format": ""
        },
        {
            "name": "propertyWithObjectId",
            "baseName": "propertyWithObjectId",
            "type": "string",
            "format": ""
        },
        {
            "name": "shouldAccept",
            "baseName": "shouldAccept",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PublicPropertyAssociationFilterBranchFiltersInner.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum PublicPropertyAssociationFilterBranchFiltersInnerFilterTypeEnum {
    UnifiedEventsInList = 'UNIFIED_EVENTS_IN_LIST'
}

